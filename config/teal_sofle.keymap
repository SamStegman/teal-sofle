#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#include <input/processors.dtsi>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10


/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&kp ESC     &kp N1          &kp N2        &kp N3        &kp N4       &kp N5         &kp UP_ARROW        &kp N6     &kp N7     &kp N8            &kp N9              &kp N0      &kp BACKSPACE
&kp TAB     &kp Q           &kp W         &kp E         &kp R        &kp T          &kp DOWN_ARROW      &kp Y      &kp U      &kp I             &kp O               &kp P       &kp TILDE
&kp LSHFT   &kp A           &kp S         &kp D         &kp F        &kp G          &kp LEFT_ARROW      &kp H      &kp J      &kp K             &kp L               &kp SEMI    &kp APOS
&kp LCTRL   &kp Z           &kp X         &kp C         &kp V        &kp B          &kp RIGHT_ARROW     &kp N      &kp M      &kp COMMA         &kp DOT             &kp FSLH    &kp ENTER
&kp C_MUTE  &kp LEFT_GUI    &kp LEFT_ALT  &kp LSHFT     &kp SPACE    &mo 1          &kp ENTER           &mo 2      &kp ENTER  &kp LEFT_BRACKET  &kp RIGHT_BRACKET   &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;5
            display-name = "LAYER0";
        }; 

        layer_1 {
            bindings = <
&kp GRAVE       &kp F1      &kp F2          &kp F3          &rgb_ug RGB_OFF  &rgb_ug RGB_ON         &mmv MOVE_UP            &kp PG_UP       &kp N7  &kp N7      &kp N7      &kp F10           &trans
&kp LC(LS(Z))   &kp F4      &kp F5          &kp F6          &rgb_ug RGB_HUD  &rgb_ug RGB_HUI        &mmv MOVE_DOWN          &kp PG_DN       &kp N7  &kp N7      &kp N7      &kp MINUS         &kp EQUAL
&trans          &kp F7      &kp F8          &kp F9          &rgb_ug RGB_SAD  &rgb_ug RGB_SAI        &mmv MOVE_LEFT          &kp HOME        &kp N7  &kp N7      &kp N7      &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans          &kp F10     &kp F11         &kp F12         &rgb_ug RGB_BRD  &rgb_ug RGB_BRI        &mmv MOVE_RIGHT         &kp END         &kp N7  &kp MINUS   &kp EQUAL   &kp F12           &trans
&kp C_MUTE      &trans      &trans          &rgb_ug RGB_SPD &rgb_ug RGB_SPI  &trans                 &mkp LCLK               &trans          &trans  &trans      &trans      &trans
            >;

            display-name = "Layer 1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &kp F6  &kp F7  &kp F8      &kp F9     &kp F10      &trans
&studio_unlock      &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN   &trans  &trans  &kp F11     &kp F12    &kp UNDER    &kp PLUS
&trans     &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &mmv MOVE_LEFT   &trans  &trans  &trans      &trans     &kp LBRC     &kp RBRC
&trans     &sys_reset    &trans          &bootloader   &trans        &trans          &mmv MOVE_RIGHT  &trans  &trans  &sys_reset  &soft_off  &bootloader  &trans
&trans     &trans        &trans          &trans        &trans        &trans          &mkp LCLK        &trans  &trans  &trans      &trans     &tog 3
            >;

            display-name = "Layer 2";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&kp GRAVE  &kp ESC      &kp N1          &kp N2      &kp N3      &kp N4         &trans       &trans  &trans  &trans  &trans  &trans      &kp LC(LS(Z))
&kp I      &kp TAB      &kp Q           &kp W       &kp E       &kp R          &trans       &trans  &trans  &trans  &trans  &kp C_PP    &trans
&kp P      &kp LSHFT    &kp A           &kp S       &kp D       &kp F          &trans       &trans  &trans  &trans  &trans  &kp C_PREV  &kp C_NEXT
&kp M      &kp LCTRL    &kp Z           &kp X       &kp C       &kp V          &trans       &trans  &trans  &trans  &trans  &trans      &trans
&kp C_MUTE &kp LEFT_GUI &kp LEFT_ALT    &kp T       &kp G       &kp SPACE      &trans       &trans  &trans  &trans  &trans  &tog 3
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "Gaming";
        };
    };
};
